/* Given a value N, find the number of ways to make change for N cents, if we have infinite supply of each of S = { S1, S2, .. , Sm} 
valued coins. The order of coins doesnâ€™t matter. For example, for N = 4 and S = {1,2,3}, there are four solutions: 
{1,1,1,1},{1,1,2},{2,2},{1,3}. So output should be 4. For N = 10 and S = {2, 5, 3, 6}, there are five solutions: {2,2,2,2,2}, {2,2,3,3},
{2,2,6}, {2,3,5} and {5,5}. So the output should be 5. */

#include <bits/stdc++.h>
using namespace std;
long long int t,n,num;
int main() 
{
	cin>>t;
	for(int i=0;i<t;i++)
	{
	    cin>>n;
	      long long int a[n];
	    for(int j=0;j<n;j++)
	    {
	        cin>>a[j];
	    }
	    cin>>num;
	      long long int dp[n+1][num+1];
	    for(int j=0;j<n;j++)
	    dp[j][0]=1;
	    for(int j=1;j<=num;j++)
	    dp[0][j]=0;
	    for(int j=1;j<=n;j++)
	    {
	        for(int k=1;k<=num;k++)
	        {
	            if(a[j-1]>k)
	            dp[j][k]=dp[j-1][k];
	            else dp[j][k]=dp[j-1][k]+dp[j][k-a[j-1]];
	        }
	    }
	    cout<<dp[n][num]<<endl;
	}
	return 0;
}

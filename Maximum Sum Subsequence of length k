**Given an array sequence [A1 , A2 ...An], the task is to find the maximum possible sum of increasing subsequence S of length K such that 
Si1<=Si2<=Si3.........<=Sin. **

    int main() 
    {
      int t ; 
      cin >> t ;
      while(t--)
      {
          int n , m ;
          cin >> n >> m ;
          int arr[n];
          for(int j = 0 ; j < n ; j++ )
          {
              cin >> arr[j];
          }
          int dp[n+1][m+1];
          memset(dp,-1,sizeof(dp));
          for(int i = 0 ; i < n ; i++ )
          {
              dp[i][1] = arr[i];
          }
          int ans = -1;
          for(int j = 0 ; j < n ; j++ )
          {
              for(int k = 0 ; k < j ; k++ )
              {
                  if(arr[k]<=arr[j])
                  {
                      for(int l = 2 ; l <= m ; l++ )
                      {
                          if(dp[k][l-1]!=-1)
                          {
                              dp[j][l]=max(dp[k][l-1]+arr[j],dp[j][l]);
                          }
                      }
                  }
              }ans = max(ans, dp[j][m]);
          } cout<<ans<<endl;
      }
      return 0;
    }

/**** Given two strings str1 and str2 and below operations that can performed on str1. Find minimum number of edits (operations) required
to convert ‘str1′ into ‘str2′.

1- Insert
2- Remove
3- Replace
All of the above operations are of cost=1.
Both the strings are of lowercase. *****/

string s1,s2;
int dp[1000][1000];

int dpp(string s11,string s22,int n,int m)
{
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=m;j++)
        {
            if(i==0)
            {
                dp[i][j]=j;
            }else
            if(j==0)
            {
                dp[i][j]=i;
            }else
            if(s11[i-1]==s22[j-1])
            {
                dp[i][j]=dp[i-1][j-1];
            }else
            {
                int x=min(dp[i-1][j-1],dp[i-1][j]);
            dp[i][j]=1+min(x,dp[i][j-1]);
            }
        }
    }
    return dp[n][m];
}
int main() 
{
    cin>>t;
    for(int i=0;i<t;i++)
    {
        memset(dp,0,sizeof(dp));
        cin>>n>>m;
       cin>>s1>>s2;
        int x=dpp(s1,s2,n,m);
       cout<< x<<endl;
    }
	return 0;
}

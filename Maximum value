/* Find the maximum value of arr[j] – arr[i] + arr[l] – arr[k], such that i < j < k < l */

/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG 
{
	public static void main (String[] args) 
	{
	    Scanner input = new Scanner(System.in);
	    int t = input.nextInt();
	    while( t > 0 )
	    {
	        t--;
	        int n = input.nextInt();
	        int arr[] = new int[n];
	        for( int i = 0 ; i < n ; i++ )
	        {
	            arr[i] = input.nextInt();
	        }
	        int dp1[] = new int[n+1];
	        int dp2[] = new int[n+1];
	        int dp3[] = new int[n+1];
	        int dp4[] = new int[n+1];
	        for( int i = 0 ; i <= n ; i++ )
	        {
	            dp1[i] = Integer.MIN_VALUE;
	            dp2[i] = Integer.MIN_VALUE;
	            dp3[i] = Integer.MIN_VALUE;
	            dp4[i] = Integer.MIN_VALUE;
	        }
	        for( int i = n-1 ; i >= 0 ; i-- )
	        {
	            dp1[i] = Math.max( dp1[i+1] , arr[i] ) ;
	        }
	           for( int i = n-2 ; i >= 0 ; i-- )
	        {
	            dp2[i] = Math.max( dp2[i+1] , dp1[i+1] - arr[i] ) ;
	        }
	        for( int i = n-3 ; i >= 0 ; i-- )
	        {
	            dp3[i] = Math.max( dp3[i+1] , dp2[i+1] + arr[i] ) ;
	        }
	          for( int i = n-4 ; i >= 0 ; i-- )
	        {
	            dp4[i] = Math.max( dp4[i+1] , dp3[i+1] - arr[i] ) ;
	        }
	        System.out.println ( dp4[0] ) ;
	    }
	}
}
